{"version":3,"sources":["components/drawer.js","components/Addcustomer.js","components/Editcustomer.js","components/Addtraining.js","components/Customerlist.js","components/Trainingslist.js","Calendar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","list","width","fullList","TemporaryDrawer","anchor","classes","React","useState","left","state","setState","toggleDrawer","open","event","type","key","Button","onClick","style","float","margin","color","fontSize","Drawer","BackdropProps","invisible","onClose","List","className","role","onKeyDown","ListItem","button","component","Link","to","App","ListItemText","primary","Addcustomer","props","setOpen","firstname","lastname","email","phone","streetaddress","postcode","city","customer","setCustomer","handleClose","handleInputChange","target","name","value","variant","Dialog","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","onChange","e","label","fullWidth","DialogActions","saveCustomer","Editcustomer","brand","model","updateCustomer","links","href","Addtraining","date","duration","activity","training","setTrainings","saveTraining","CustomerTable","customers","setCustomers","useEffect","fetchData","handleClick","reason","fetch","then","response","json","data","content","link","method","headers","body","JSON","stringify","res","catch","err","console","error","columns","Header","accessor","sortable","filterable","row","log","window","confirm","Cell","original","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","size","TrainingsTable","moment","format","Kalenteri","trainings","Paper","defaultCurrentDate","AppBar","position","background","Toolbar","Typography","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cdc36ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { BrowserRouter,  Link} from 'react-router-dom';\r\nimport DehazeIcon from '@material-ui/icons/Dehaze';\r\nimport App from '../App';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n\r\n  });\r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n/*-----------------------------------------*/\r\n\r\n  const list = anchor => (\r\n    <div\r\n    className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n\r\n      <BrowserRouter>\r\n      <div>\r\n      <ListItem button component={Link} to=\"/\" className={App} >\r\n            <ListItemText primary=\"Customers\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/trainings\" className={App}>\r\n            <ListItemText primary=\"Trainings\" />\r\n          </ListItem>\r\n          <ListItem button component={Link} to=\"/trainings\" className={App}>\r\n            <ListItemText primary=\"Calendar\" />\r\n          </ListItem>\r\n     \r\n        </div> \r\n        </BrowserRouter>\r\n     \r\n    </div>\r\n  );\r\n  \r\n/*-----------------------------------------*/\r\n\r\nreturn (\r\n  <div>\r\n    <Button onClick={toggleDrawer(\"left\", true)} style={{float: 'left', margin: 20 }}   color=\"primary\"> < DehazeIcon fontSize=\"large\"  /> </Button>\r\n    <Drawer\r\n      BackdropProps={{ invisible: true }}\r\n      open={state.left}\r\n      onClose={toggleDrawer(\"left\", false)}\r\n    >\r\n      {list(List)}\r\n      \r\n    </Drawer>\r\n   \r\n    \r\n  </div>\r\n);\r\n}\r\n\r\n","import React from'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Addcustomer(props){\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [customer, setCustomer] = React.useState({firstname: '', lastname: '', email: '', phone: '', streetaddress: '', postcode: '', city: ''})\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\nconst handleInputChange = (event) => {\r\nsetCustomer({...customer, [event.target.name]: event.target.value})\r\n}\r\n\r\nconst addCustomer = () => {\r\n    props.saveCustomer(customer);\r\n    handleClose();\r\n}\r\n\r\n    return(\r\n    <div>\r\n      <Button style={{margin: 10}}  variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add Customer\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n         <DialogTitle id=\"form-dialog-title\">Add Customer</DialogTitle>\r\n         <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"firstname\"\r\n                    value ={customer.firstname}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"lastname\"\r\n                    value ={customer.lastname}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"email\"\r\n                    value ={customer.email}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"phone\"\r\n                    value ={customer.phone}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Phone\"\r\n                    fullWidth\r\n                />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"streetaddress\"\r\n                    value ={customer.streetaddress}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Street address\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"postcode\"\r\n                    value ={customer.postcode}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Postcode\"\r\n                    fullWidth\r\n                />\r\n                        <TextField\r\n                    margin=\"dense\"\r\n                    name = \"city\"\r\n                    value ={customer.city}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"City\"\r\n                    fullWidth\r\n                />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addCustomer} color=\"primary\">\r\n            Save\r\n\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n);\r\n\r\n}","import React from'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcustomer(props){\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [customer, setCustomer] = React.useState({brand: '', model: '', email: '', phone: '', streetaddress: '', postcode: '', city: ''})\r\n\r\n\r\n    const handleClickOpen = () => {  \r\n      setCustomer({firstname: props.customer.firstname, lastname: props.customer.lastname,  email:props.customer.email,  phone: props.customer.phone, streetaddress:props.customer.streetaddress, postcode: props.customer.postcode, city: props.customer.city});\r\n      setOpen(true);\r\n    };\r\n  \r\n\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n    setCustomer({...customer, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const updateCustomer = () => {\r\n        props.updateCustomer(customer, props.customer.links[0].href);\r\n        handleClose();\r\n    }\r\n\r\n    return(\r\n    <div>\r\n      <Button  color=\"primary\" onClick={handleClickOpen}> <CreateIcon></CreateIcon>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n         <DialogTitle id=\"form-dialog-title\">Edit Customer</DialogTitle>\r\n         <DialogContent>\r\n         <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"firstname\"\r\n                    value ={customer.firstname}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"lastname\"\r\n                    value ={customer.lastname}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"email\"\r\n                    value ={customer.email}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"phone\"\r\n                    value ={customer.phone}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Phone\"\r\n                    fullWidth\r\n                />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"streetaddress\"\r\n                    value ={customer.streetaddress}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Street address\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"postcode\"\r\n                    value ={customer.postcode}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Postcode\"\r\n                    fullWidth\r\n                />\r\n                        <TextField\r\n                    margin=\"dense\"\r\n                    name = \"city\"\r\n                    value ={customer.city}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"city\"\r\n                    fullWidth\r\n                />\r\n         </DialogContent>\r\n         <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={updateCustomer} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n);\r\n\r\n}","import React from'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\n\r\n\r\nexport default function Addtraining(props){\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [training, setTrainings] = React.useState({date: '', duration: '', activity: '', customer: '', })\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\nconst handleInputChange = (event) => {\r\nsetTrainings({...training, [event.target.name]: event.target.value})\r\n}\r\n\r\nconst addTraining = () => {\r\n    props.saveTraining(training);\r\n    handleClose();\r\n}\r\n\r\n    return(\r\n    <div>\r\n      <Button style={{margin: 10}}  variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n      <PostAddIcon></PostAddIcon>\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n         <DialogTitle id=\"form-dialog-title\">Add Training</DialogTitle>\r\n         <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"date\"\r\n                    value ={training.date}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Date\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    margin=\"dense\"\r\n                    name = \"duration\"\r\n                    value ={training.duration}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Duration\"\r\n                    fullWidth\r\n                />\r\n                  <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"activity\"\r\n                    value ={training.activity}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Activity\"\r\n                    fullWidth\r\n                />\r\n                     <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name = \"customer\"\r\n                    value ={training.customer}\r\n                    onChange ={e => handleInputChange(e)}\r\n                    label=\"Customer\"\r\n                    fullWidth\r\n                />\r\n                   \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addTraining} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n);\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Addcustomer from './Addcustomer';\r\nimport Editcustomer from './Editcustomer';\r\nimport Addtraining from './Addtraining';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\n\r\n\r\n\r\nexport default function CustomerTable(){\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n\r\n  \r\n  const fetchData = () => {\r\n      fetch (' https://customerrest.herokuapp.com/api/customers')\r\n      .then(response => response.json())\r\n      .then(data => setCustomers(data.content))   \r\n  }\r\n\r\n\r\n\r\n  const deleteCustomer =(link) =>{\r\n  console.log(link);\r\n  if (window.confirm('Are you sure') ){\r\n        fetch(link, {method:'DELETE'})\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n        \r\n           /*Snackbar -ilmoitus poiston onnistumisesta*/\r\n        .then(handleClick)\r\n      } \r\n    }\r\n\r\n const saveCustomer = (customer) => {\r\n  fetch(' https://customerrest.herokuapp.com/api/customers',{\r\n    method: 'POST',\r\n    headers:{\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(customer)\r\n    })\r\n    .then(res => fetchData())\r\n    .catch(err => console.error(err))\r\n}\r\n\r\n\r\nconst updateCustomer =(customer, link) => {\r\n  fetch(link, {\r\n    method: 'PUT',\r\n    headers:{\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(customer)\r\n    })\r\n    .then(res => fetchData())\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n\r\n  const saveTraining = (training) => {\r\n    fetch(`https://customerrest.herokuapp.com/api/trainings`,{\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(training)\r\n      })\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err))\r\n  }\r\n  \r\n    \r\n\r\nconst columns =[\r\n{ \r\n   Header: 'Actions',\r\n   accessor: 'actions',\r\n   sortable: false,\r\n   filterable: false,\r\n   width: 80,\r\n   accessor: 'links[0].href',\r\n   Cell: row  => <Button  onClick={() => deleteCustomer(row.value)} ><DeleteIcon></DeleteIcon></Button>\r\n   \r\n},\r\n{\r\n  sortable: false,\r\n  filterable: false,\r\n  width: 80,\r\n  Cell: row => <Editcustomer updateCustomer={updateCustomer} customer={row.original}/>\r\n},\r\n{\r\n  sortable: false,\r\n  filterable: false,\r\n  width: 80,\r\n  Cell: row => <Addtraining saveTraining={saveTraining} customer={row.original}/>\r\n},\r\n\r\n{\r\n   Header: 'First name',\r\n   accessor: 'firstname'\r\n},\r\n{\r\n   Header: 'Last name',\r\n   accessor: 'lastname'\r\n},\r\n{\r\n    Header: 'Email',\r\n    accessor: 'email'\r\n  },\r\n  {\r\n    Header: 'Phone',\r\n    accessor: 'phone'\r\n  },\r\n  {\r\n    Header: 'Street address',\r\n    accessor: 'streetaddress'\r\n  },\r\n  {\r\n    Header: 'Postcode',\r\n    accessor: 'postcode'\r\n  },\r\n  {\r\n    Header: 'City',\r\n    accessor: 'city'\r\n  },\r\n\r\n\r\n]\r\n  \r\n /* Cell: ({index}) => <button id={index} onClick={deletePressed} > Delete</button> */\r\n\r\n\r\n\r\n  return(\r\n      <div>\r\n          <Addcustomer saveCustomer={saveCustomer}/>\r\n          <Addtraining saveTraining={saveTraining}/>\r\n        <ReactTable filterable={true} data={customers} columns={columns} />\r\n        <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport moment from 'moment';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function TrainingsTable(props){\r\n\r\n  const [training, setTrainings] = useState([]);\r\n\r\n\r\n  useEffect(() => fetchData(), []);\r\n  const [open, setOpen] = React.useState(false); \r\n\r\n\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n  \r\n  \r\n  const fetchData = () => {\r\n      fetch (`https://customerrest.herokuapp.com/api/trainings`)\r\n      .then(response => response.json())\r\n      .then(data => setTrainings(data.content))   \r\n \r\n\r\n}\r\n\r\n\r\n  const deleteTraining =(link) =>{\r\n    /*valinnan vahvistus*/\r\n    if (window.confirm('Are you sure') ){\r\n\r\n   fetch(link, {method:'DELETE'})\r\n   .then(res => fetchData())\r\n   .catch(err => console.error(err))\r\n   \r\n   /*Snackbar -ilmoitus poiston onnistumisesta*/\r\n   .then(handleClick)\r\n    } \r\n\r\n }\r\n\r\n\r\n\r\nconst columns =[\r\n    /*Rivin poistaminen*/\r\n{\r\n\r\n    Header: 'Actions',\r\n    accessor: 'actions',\r\n    sortable: false,\r\n    filterable: false,\r\n    width: 80,\r\n    accessor: 'links[1].href',\r\n    Cell: row  => <Button  onClick={() => deleteTraining(row.value)} ><DeleteIcon></DeleteIcon></Button>\r\n    \r\n},\r\n{\r\n  Header: 'Activity',\r\n  accessor: 'activity'\r\n  },\r\n{\r\n  Header: 'Date',\r\n  accessor: 'date',\r\n  Cell: row => {\r\n    if(row.value) {\r\n    return moment(row.value).format('LLL')\r\n    } else {\r\n    return 'Not complete'\r\n    }\r\n    }\r\n},\r\n{\r\n    Header: 'Duration (min)',\r\n    accessor: 'duration'\r\n  },\r\n  {\r\n    Header: 'Customer',\r\n    accessor: 'links[2].href'\r\n  },\r\n]\r\n\r\n  return(\r\n      <div>\r\n        <ReactTable filterable={true} data={training}  columns={columns} />\r\n        \r\n        <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      </div>\r\n  );\r\n}","import Paper from '@material-ui/core/Paper';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport { Scheduler, DayView, WeekView, MonthView, Toolbar,DateNavigator, TodayButton,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\nimport './App.css';\r\n\r\nexport default function Kalenteri () {\r\n\r\n    const [trainings, setTrainings] = useState([]);\r\n   \r\n\r\n    useEffect(() => fetchData(), []);\r\n    \r\n\r\n    const fetchData = () => {\r\n        fetch (`https://customerrest.herokuapp.com/api/trainings`)\r\n        .then(response => response.json())\r\n        .then(data => setTrainings(data.content))   \r\n    }\r\n  console.log(trainings)\r\n\r\n  \r\n\r\n\r\n        return (\r\n          <Paper>\r\n            <Scheduler\r\n     \r\n            >\r\n                \r\n              <ViewState\r\n                defaultCurrentDate=\"2020-08-17\"\r\n              />\r\n              <DayView />\r\n              \r\n              <Toolbar />\r\n              <DateNavigator />\r\n              <TodayButton />\r\n     \r\n            </Scheduler>\r\n          </Paper>\r\n        );\r\n      }\r\n\r\n    \r\n","import React from 'react';\nimport './App.css';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport TemporaryDrawer from './components/drawer';\nimport CustomerTable from './components/Customerlist';\nimport TrainingsTable from './components/Trainingslist';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { BrowserRouter, Switch, Route, Link} from 'react-router-dom';\nimport Kalenteri from './Calendar';\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n   \n  \n           <AppBar position=\"static\"  AppBar style={{ background: '#2E3B55', margin: '0 0 20px 0 '}} > \n        <Toolbar>    \n          <Typography variant=\"h6\" >\n            PersonalTrainer\n          </Typography> \n        </Toolbar>\n        <TemporaryDrawer />\n      </AppBar >  \n      <BrowserRouter>\n      <div>\n      <ListItem button component={Link} to=\"/\">\n            <ListItemText primary=\"Customers\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/trainings\">\n            <ListItemText primary=\"Trainings\" />\n          </ListItem>\n          <ListItem button component={Link} to=\"/calendar\" >\n            <ListItemText primary=\"Calendar\" />\n          </ListItem>\n      <Switch>\n          <Route exact path=\"/\" component={CustomerTable} />\n          <Route exact path=\"/trainings\" component={TrainingsTable} />\n          <Route exact path=\"/calendar\" component={Kalenteri} />\n\n        </Switch>\n        </div> \n        </BrowserRouter>\n     \n    </div>\n   \n    \n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}